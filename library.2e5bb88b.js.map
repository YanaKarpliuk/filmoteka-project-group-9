{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SCAAC,EAAAD,EAAA,SAEO,SAASE,EAAaC,GAC3B,MAAMC,eAAEA,EAAcC,aAAEA,EAAYC,GAAEA,EAAEC,YAAEA,EAAWC,UAAEA,GAAcL,EAC/DM,GAAc,EAAAR,EAAAS,WAAUF,GAAW,GACnCG,EAAe,IAAIC,KAAKP,GAAcQ,cAEtCC,EAAQP,EACV,uIAE+DA,4CAAsDA,2HACtDA,4CAAsDA,4KAChCA,0BAAoCH,eAA4BE,uDAGrJ,mDAAmDA,g1BAWjDS,GAAU,EAAAd,EAAAe,uBAAsB,4DAE1BF,iDACkCV,EAAea,gEAChBR,OAAiBE,gCAM9D,OAFAI,EAAQG,QAAQf,MAAQgB,KAAKC,UAAUjB,GAEhCY,C,CClCT,MAAMM,EAAO,CACXC,WAAYC,SAASC,cAAc,oBACnCC,SAAUF,SAASC,cAAc,kBACjCE,QAASH,SAASC,cAAc,aAU5BG,EAAoBC,IAJxBP,EAAKI,SAASI,UAAUC,OAAO,UAC/BT,EAAKC,WAAWO,UAAUE,IAAI,UAK9BV,EAAKK,QAAQM,UAAY,GACzB,MAAMC,EAAOd,KAAKe,MAAMC,aAAaC,QAV3B,oBAU4C,GAClDH,EAAKI,OAET,MAAMC,EAASL,EAAKM,IAAIrC,GACxBmB,EAAKK,QAAQc,UAAUF,EAAO,EAGhCjB,EAAKC,WAAWmB,iBAAiB,QAASd,GAE1CA,IC3BA,IAAAe,EAAA1C,EAAA,S,aAGA,MAAM2C,EAAO,CACXjB,QAASH,SAASC,cAAc,YAChCoB,SAAUrB,SAASC,cAAc,aAG7BqB,EAAWH,EAAAI,OAAqBH,EAAKC,UAqC3CD,EAAKjB,QAAQe,iBAAiB,SAfPb,IACrB,MAAMK,EAAOd,KAAKe,MAAMN,EAAEmB,OAAOC,QAAQ,YAAY9B,QAAQf,OAC7D0C,EAASI,OAvBS,EAACL,EAAUzC,KAC7ByC,EAASpB,cAAc,gBAAgBQ,UAAY7B,EAAM+C,MACzDN,EAASpB,cAAc,eAAeQ,UAAY7B,EAAMgD,SACxDP,EAASpB,cAAc,SAASQ,UAAY7B,EAAMiD,aAClDR,EAASpB,cAAc,UAAUQ,UAAY7B,EAAMkD,WACnDT,EAASpB,cAAc,eAAeQ,UAAY7B,EAAMmD,WACxDV,EAASpB,cAAc,mBAAmBQ,UAAY7B,EAAM+C,MAC5DN,EAASpB,cAAc,iBAAiBQ,WAAY,EAAA/B,EAAAS,WAClDP,EAAMK,WAERoC,EAASpB,cACP,kBACA+B,IAAM,sCAAsCpD,EAAMI,cACpD,MAAMiD,EAAWjC,SAASC,cAAc,2BAExCgC,EAASf,iBAAiB,SAC1B,SAASgB,IACPZ,EAASa,QACTF,EAASG,oBAAoB,QAASF,E,KAMxCG,CAAYf,EAAS9B,UAAWkB,EAAK,IAavCV,SAASkB,iBAAiB,SAR1B,SAAoBb,GAEdA,EAAEmB,OAAOc,S,qBHrCA,IAAIC,EAAA/D,GAAJ,CAAewB,SAASwC,iBAAkB,CACrDC,QAAS,MAKb,EAAAC,EAAAC","sources":["src/library.js","src/js_components/getMovieCard.js","src/js_components/loadWatchedMovies.js","src/js_components/openModalOnGallery.js"],"sourcesContent":["import OnlyScroll from 'only-scrollbar';\nimport './js_components/loadWatchedMovies';\nimport './js_components/openModalOnGallery';\nconst scroll = new OnlyScroll(document.scrollingElement, {\n    damping: 0.8,\n});\n\nimport loading from './js_components/loading-spinner';\n\nloading();\n","import { getGenres, createElementFromHTML } from './helpers';\n\nexport function getMovieCard(movie) {\n  const { original_title, release_date, id, poster_path, genre_ids } = movie;\n  const movieGenres = getGenres(genre_ids, true);\n  const movieRelease = new Date(release_date).getFullYear();\n\n  const image = poster_path\n    ? `<div class=\"gallery-item__image-wrap\">\n              <picture>\n                <source srcset=\"https://www.themoviedb.org/t/p/w780${poster_path} 1x, https://www.themoviedb.org/t/p/w780${poster_path} 2x\" media=\"(min-width: 768px)\" type=\"image/jpeg\">\n                <source srcset=\"https://www.themoviedb.org/t/p/w300${poster_path} 1x, https://www.themoviedb.org/t/p/w780${poster_path} 2x\" media=\"(min-width: 320px)\" type=\"image/jpeg\">                           \n                <img class=\"gallery-item__image\" src=\"https://www.themoviedb.org/t/p/w300${poster_path}\" loading=\"lazy\" alt=\"${original_title}\" data-id=\"${id}\"/>/>\n              </picture>\n            </div>`\n    : `<div class=\"gallery-item__placeholder\" data-id=\"${id}\">\n                <svg class=\"gallery-item__placeholder-image\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                    <title>image</title>\n                    <g id=\"icomoon-ignore\">\n                    </g>\n                    <path d=\"M479.942 64c0.020 0.017 0.041 0.038 0.058 0.058v383.885c-0.017 0.020-0.038 0.041-0.058 0.058h-447.885c-0.020-0.017-0.041-0.038-0.057-0.058v-383.886c0.017-0.020 0.038-0.041 0.057-0.057h447.885zM480 32h-448c-17.6 0-32 14.4-32 32v384c0 17.6 14.4 32 32 32h448c17.6 0 32-14.4 32-32v-384c0-17.6-14.4-32-32-32v0z\"></path>\n                    <path d=\"M416 144c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48z\"></path>\n                    <path d=\"M448 416h-384v-64l112-192 128 160h32l112-96z\"></path>\n                </svg>     \n           </div>`;\n\n  const element = createElementFromHTML(`\n        <li class='gallery-item js-item'>\n            ${image}\n            <p class=\"gallery-item__title\">${`${original_title.toUpperCase()}`}</p>\n            <p class=\"gallery-item__info\">${`${movieGenres} | ${movieRelease}`}</p>\n        </li>\n      `);\n\n  element.dataset.movie = JSON.stringify(movie);\n\n  return element;\n}\n","import { getMovieCard } from './getMovieCard';\n\nconst refs = {\n  watchedBtn: document.querySelector('.js-watched-list'),\n  queueBtn: document.querySelector('.js-queue-list'),\n  gallery: document.querySelector('.gallery'),\n};\n\nconst KEY = 'watched-movies';\n\nconst changeActiveBtn = () => {\n  refs.queueBtn.classList.remove('active');\n  refs.watchedBtn.classList.add('active');\n};\n\nconst onWatchedBtnClick = e => {\n  changeActiveBtn();\n  refs.gallery.innerHTML = '';\n  const data = JSON.parse(localStorage.getItem(KEY)) || [];\n  if (data.length === 0) {\n  }\n  const markup = data.map(getMovieCard);\n  refs.gallery.append(...markup);\n};\n\nrefs.watchedBtn.addEventListener('click', onWatchedBtnClick);\n\nonWatchedBtnClick();\n","import * as basicLightbox from 'basiclightbox';\nimport 'basiclightbox/dist/basicLightbox.min.css';\nimport { getGenres } from './helpers';\nconst refs = {\n  gallery: document.querySelector('.gallery'),\n  template: document.querySelector('template'),\n};\n\nconst lightbox = basicLightbox.create(refs.template);\nconst renderModal = (template, movie) => {\n  template.querySelector('.movie-title').innerHTML = movie.title;\n  template.querySelector('.about-text').innerHTML = movie.overview;\n  template.querySelector('.vote').innerHTML = movie.vote_average;\n  template.querySelector('.votes').innerHTML = movie.vote_count;\n  template.querySelector('.popularity').innerHTML = movie.popularity;\n  template.querySelector('.original-title').innerHTML = movie.title;\n  template.querySelector('.movie-genres').innerHTML = getGenres(\n    movie.genre_ids\n  );\n  template.querySelector(\n    '.modalfoto-img'\n  ).src = `https://www.themoviedb.org/t/p/w780${movie.poster_path}`;\n  const btnClose = document.querySelector('.modalfilm-button-close');\n\n  btnClose.addEventListener('click', closeModal);\n  function closeModal() {\n    lightbox.close();\n    btnClose.removeEventListener('click', closeModal);\n  }\n};\nconst onGalleryClick = e => {\n  const data = JSON.parse(e.target.closest('.js-item').dataset.movie);\n  lightbox.show();\n  renderModal(lightbox.element(), data);\n};\n\nconst onBtnAddToWatchedClick = e => {};\n\nfunction onBtnClick(e) {\n  // console.log(e.target.className);\n  if (e.target.className === 'btn watched') {\n    onBtnAddToWatchedClick();\n  }\n}\n\nrefs.gallery.addEventListener('click', onGalleryClick);\ndocument.addEventListener('click', onBtnClick);\n"],"names":["$aKQqr","parcelRequire","$eJIr6","$0591fa8daec96483$export$9d872e19780ec393","movie","original_title","release_date","id","poster_path","genre_ids","movieGenres","getGenres","movieRelease","Date","getFullYear","image","element","createElementFromHTML","toUpperCase","dataset","JSON","stringify","$d896b9747eb7f824$var$refs","watchedBtn","document","querySelector","queueBtn","gallery","$d896b9747eb7f824$var$onWatchedBtnClick","e","classList","remove","add","innerHTML","data","parse","localStorage","getItem","length","markup","map","append","addEventListener","$9B8F0","$543e062a2064568b$var$refs","template","$543e062a2064568b$var$lightbox","create","target","closest","show","title","overview","vote_average","vote_count","popularity","src","btnClose","closeModal","close","removeEventListener","$543e062a2064568b$var$renderModal","className","$parcel$interopDefault","scrollingElement","damping","$ayZFN","default"],"version":3,"file":"library.2e5bb88b.js.map"}